name: C/C++ CI

on:
  push:

jobs:
  test-docker:
    runs-on: ubuntu-latest
    container: node:latest
    steps:
    - run: |
        node -v
    
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    
    - name: Make
      run: make
      
    - name: Check git event and event name
      run: |
        echo ${{ github.event }}
        echo ${{ github.event_name }}
      
    - name: Move binaries
      run: |
        mkdir build
        mv ./CASBACnetStackCompileTest ./build/
        
    - name: Zip build
      run: zip -r Linux_CASBACnetStackCompileTest.zip ./build
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: CASBACnetStackCompileTest
        path: Linux_CASBACnetStackCompileTest.zip
    
  windows-build:
    runs-on: windows-2022
    steps:
    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1.0.3
    
    - name: Checkout repo
      uses: actions/checkout@v2
      
    - name: msbuild
      run: msbuild CASBACnetStackCompileTest.sln /p:Configuration=Release /p:Platform="x64" /p:OutputPath=.\build\
      
    - name: Zip build
      run: |
        powershell Compress-Archive x64\Release Windows_CASBACnetStackCompileTest.zip
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: CASBACnetStackCompileTest
        path: Windows_CASBACnetStackCompileTest.zip
  
  publish-release:
    needs: [linux-build, windows-build]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/actions-test'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: CASBACnetStackCompileTest
          
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Test release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Windows_CASBACnetStackCompileTest.zip
          asset_name: Windows_CASBACnetStackCompileTest.zip
          asset_content_type: application/zip
        
      - name: Upload Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Linux_CASBACnetStackCompileTest.zip
          asset_name: Linux_CASBACnetStackCompileTest.zip
          asset_content_type: application/zip
        
